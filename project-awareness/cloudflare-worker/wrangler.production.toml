# Production-Optimized Cloudflare Workers Configuration
# ChittyOS Project Awareness System - Global Deployment
# Generated by: Cloudflare Optimization Specialist

name = "chittyops-project-awareness"
main = "src/worker.js"
compatibility_date = "2024-08-29"
compatibility_flags = ["nodejs_compat", "streams_enable_constructors", "formdata_parser_supports_files"]

# Performance-optimized custom domain routing
routes = [
  { pattern = "project-awareness.chitty.cc/*", custom_domain = true },
  { pattern = "api.chitty.cc/project-awareness/*", custom_domain = true }
]

# Production environment variables (optimized for AI workloads)
[vars]
ENVIRONMENT = "production"
CHITTY_REGISTRY_URL = "https://registry.chitty.cc"
CHITTYCHAT_API_URL = "https://chittychat.chitty.cc"
CHITTYID_API_URL = "https://chittyid.chitty.cc"
CORS_ORIGIN = "https://claude.ai,https://chat.openai.com,https://chatgpt.com"
SESSION_TIMEOUT = "3600"
MAX_SESSIONS_PER_IP = "25"           # Increased for AI workflows
RATE_LIMIT_RPM = "2000"              # Production scale
RATE_LIMIT_BURST = "100"             # Burst capacity
CACHE_TTL = "1800"                   # 30 minutes for session data
EDGE_CACHE_TTL = "300"               # 5 minutes for dynamic content
WEBSOCKET_TIMEOUT = "300000"         # 5 minutes WebSocket timeout
MAX_WEBSOCKET_CONNECTIONS = "1000"   # Concurrent WebSocket limit
PERFORMANCE_THRESHOLD_MS = "100"     # Sub-100ms SLA target
HEALTH_CHECK_INTERVAL = "30"         # 30-second health checks
ANALYTICS_SAMPLING_RATE = "1.0"      # 100% sampling for production insights

# Optimized KV Namespaces with performance tuning
[[kv_namespaces]]
binding = "SESSION_STORE"
id = "chittyops_sessions_prod"
preview_id = "chittyops_sessions_staging"

[[kv_namespaces]]
binding = "PROJECT_STORE"  
id = "chittyops_projects_prod"
preview_id = "chittyops_projects_staging"

[[kv_namespaces]]
binding = "CROSS_PLATFORM_SYNC"
id = "chittyops_sync_prod"
preview_id = "chittyops_sync_staging"

[[kv_namespaces]]
binding = "CACHE_STORE"
id = "chittyops_cache_prod" 
preview_id = "chittyops_cache_staging"

[[kv_namespaces]]
binding = "ANALYTICS_STORE"
id = "chittyops_analytics_prod"
preview_id = "chittyops_analytics_staging"

# Enhanced Durable Objects for global distribution
[[durable_objects.bindings]]
name = "PROJECT_AWARENESS_DO"
class_name = "ProjectAwarenessDurableObject"
script_name = "chittyops-project-awareness"

[[durable_objects.bindings]]
name = "SESSION_SYNC_DO" 
class_name = "SessionSyncDurableObject"
script_name = "chittyops-project-awareness"

[[durable_objects.bindings]]
name = "WEBSOCKET_MANAGER_DO"
class_name = "WebSocketManagerDurableObject"
script_name = "chittyops-project-awareness"

[[durable_objects.bindings]]
name = "ANALYTICS_AGGREGATOR_DO"
class_name = "AnalyticsAggregatorDurableObject" 
script_name = "chittyops-project-awareness"

# Optimized R2 Storage with lifecycle management
[[r2_buckets]]
binding = "PROJECT_DATA_BUCKET"
bucket_name = "chittyops-project-data-prod"
preview_bucket_name = "chittyops-project-data-staging"

[[r2_buckets]]
binding = "ANALYTICS_BUCKET"
bucket_name = "chittyops-analytics-prod"
preview_bucket_name = "chittyops-analytics-staging"

[[r2_buckets]]
binding = "SESSION_ARCHIVE_BUCKET"
bucket_name = "chittyops-session-archive-prod"
preview_bucket_name = "chittyops-session-archive-staging"

# Enhanced Analytics Engine for comprehensive tracking
[[analytics_engine_datasets]]
binding = "USAGE_ANALYTICS"
dataset = "chittyops_usage_prod"

[[analytics_engine_datasets]]
binding = "PERFORMANCE_ANALYTICS"
dataset = "chittyops_performance_prod"

[[analytics_engine_datasets]]
binding = "SECURITY_ANALYTICS"
dataset = "chittyops_security_prod"

[[analytics_engine_datasets]]
binding = "BUSINESS_ANALYTICS"
dataset = "chittyops_business_prod"

# Production secrets configuration
# Deploy with: wrangler secret put SECRET_NAME
# Required secrets:
# - CHITTYID_API_KEY: ChittyID service authentication
# - CHITTYCHAT_API_KEY: ChittyChat integration key  
# - REGISTRY_API_KEY: ChittyRegistry access key
# - SESSION_ENCRYPTION_KEY: AES-256 encryption key for session data
# - WEBHOOK_SECRET: Webhook validation secret
# - JWT_PRIVATE_KEY: JWT signing key
# - JWT_PUBLIC_KEY: JWT verification key
# - PAGERDUTY_API_KEY: PagerDuty alerting integration
# - SLACK_WEBHOOK_URL: Slack notification webhook
# - OPENAI_API_KEY: OpenAI integration (optional)
# - ANTHROPIC_API_KEY: Anthropic integration (optional)

# Optimized resource limits for AI workloads
[limits]
cpu_ms = 100000              # Doubled CPU allocation for AI processing
memory_mb = 512              # Increased memory for complex operations

# Enhanced placement strategy for global distribution
[placement]
mode = "smart"               # Intelligent edge placement

# Build configuration with optimization
[build]
command = "npm run build:production"
watch_dir = "src"

# Staging environment configuration
[env.staging]
name = "chittyops-project-awareness-staging"
route = { pattern = "project-awareness-staging.chitty.cc/*", custom_domain = true }

[env.staging.vars]
ENVIRONMENT = "staging"
CHITTY_REGISTRY_URL = "https://registry-staging.chitty.cc"
CHITTYCHAT_API_URL = "https://chittychat-staging.chitty.cc"  
CHITTYID_API_URL = "https://chittyid-staging.chitty.cc"
CORS_ORIGIN = "*"                    # More permissive for testing
RATE_LIMIT_RPM = "5000"              # Higher for load testing
RATE_LIMIT_BURST = "250"             # Higher burst for testing
SESSION_TIMEOUT = "1800"             # Shorter for testing
CACHE_TTL = "300"                    # Shorter cache for testing
PERFORMANCE_THRESHOLD_MS = "200"      # More lenient for staging
ANALYTICS_SAMPLING_RATE = "0.1"      # 10% sampling for staging

# Development environment configuration  
[env.development]
name = "chittyops-project-awareness-dev"
vars.ENVIRONMENT = "development"
vars.CORS_ORIGIN = "*"
vars.RATE_LIMIT_RPM = "10000"        # No limits for development
vars.CACHE_TTL = "60"                # Very short cache for dev
vars.ANALYTICS_SAMPLING_RATE = "0.01" # 1% sampling for dev

# Deployment configuration
[triggers]
# Trigger deployments on specific paths
crons = ["0 */6 * * *"]              # Health check every 6 hours

# Observability configuration
[observability]
enabled = true
head_sampling_rate = 0.01            # 1% trace sampling